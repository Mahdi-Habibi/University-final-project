const express=require("express"),app=express(),cors=require("cors"),bodyParser=require("body-parser"),mongoose=require("mongoose");mongoose.connect("mongodb://localhost:27017/user/user-information",{useNewUrlParser:!0,useUnifiedTopology:!0});const userSchema=new mongoose.Schema({username:String,email:String,password:String}),User=mongoose.model("User",userSchema);app.use(cors()),app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json()),app.use((req,res,next)=>{res.header("Access-Control-Allow-Origin","*"),res.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),next()}),app.post("/signup",(req,res)=>{const{username:username,email:email,password:password}=req.body;User.findOne({$or:[{username:username},{email:email}]},(err,existingUser)=>{if(err)return res.status(500).json({error:"An error occurred."});if(existingUser)return res.status(400).json({error:"Username or email already exists."});const newUser=new User({username:username,email:email,password:password});newUser.save((err,savedUser)=>{if(err)return res.status(500).json({error:"An error occurred while signing up."});res.json({message:"Signup successful!"})})})}),app.post("/login",(req,res)=>{const{username:username,password:password}=req.body;User.findOne({username:username,password:password},(err,user)=>err?res.status(500).json({error:"An error occurred."}):user?void res.json({message:"Login successful!"}):res.status(401).json({error:"Invalid credentials."}))}),app.listen(port,()=>console.log(`Server running on port ${port}`));